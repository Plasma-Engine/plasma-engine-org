version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: content-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: content_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: content-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  content-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: content-service
    ports:
      - "8003:8003"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/content_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      LOG_LEVEL: INFO
      DEBUG: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    command: uvicorn src.main:app --host 0.0.0.0 --port 8003 --reload

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: content-celery-worker
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/content_db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
      LOG_LEVEL: INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./.env:/app/.env
    command: celery -A src.workers.celery_app worker --loglevel=info

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: content-flower
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/2
    depends_on:
      - redis
    command: celery -A src.workers.celery_app flower --port=5555

volumes:
  postgres_data:
  redis_data: