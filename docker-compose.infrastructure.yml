version: '3.9'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    container_name: plasma-postgres
    environment:
      POSTGRES_USER: plasma
      POSTGRES_PASSWORD: plasma_dev
      POSTGRES_DB: plasma_engine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U plasma"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: plasma-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Neo4j for knowledge graph
  neo4j:
    image: neo4j:5-community
    container_name: plasma-neo4j
    environment:
      NEO4J_AUTH: neo4j/plasma_dev
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_memory_pagecache_size: 1G
      NEO4J_dbms_memory_heap_max__size: 1G
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:7474"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO for S3-compatible object storage
  minio:
    image: minio/minio:latest
    container_name: plasma-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Create MinIO bucket on startup
  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin;
      /usr/bin/mc mb minio/plasma-documents || true;
      /usr/bin/mc policy set public minio/plasma-documents;
      exit 0;
      "

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: plasma-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  # Optional: RedisInsight for Redis management
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: plasma-redis-insight
    ports:
      - "8001:8001"
    volumes:
      - redis_insight:/db
    depends_on:
      - redis

volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  neo4j_logs:
  minio_data:
  redis_insight:

networks:
  default:
    name: plasma-network
    driver: bridge