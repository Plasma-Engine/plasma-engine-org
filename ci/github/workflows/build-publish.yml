# Explainer: Reusable Docker build/publish workflow.
# Inputs: image_name, registry, context, dockerfile, build_args, tags
# Outputs: Published image to registry and metadata artifact.
# Downstream: Service repos call this to standardize container publishing.
# Docs: https://docs.github.com/actions/publishing-packages/publishing-docker-images

name: build-publish

on:
  workflow_call:
    inputs:
      image_name:
        description: "Image name (without registry)"
        required: true
        type: string
      registry:
        description: "Container registry hostname (e.g., ghcr.io)"
        required: true
        type: string
      context:
        description: "Docker build context"
        required: false
        type: string
        default: "."
      dockerfile:
        description: "Path to Dockerfile"
        required: false
        type: string
        default: "Dockerfile"
      tags:
        description: "Space-separated tags"
        required: false
        type: string
        default: "latest"
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_PASSWORD:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: true
          tags: |
            ${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.tags }}
          provenance: false

      - name: Output image reference
        run: |
          echo "image=${{ inputs.registry }}/${{ github.repository_owner }}/${{ inputs.image_name }}:${{ inputs.tags }}" | tee image.txt

      - name: Upload artifact (image reference)
        uses: actions/upload-artifact@v4
        with:
          name: image-reference
          path: image.txt