# Explainer: Reusable Terraform plan/apply workflow (AWS + OIDC example).
# Inputs: working_directory, environment, aws_region, role_to_assume, plan_only
# Outputs: Plan artifact; applies when triggered with appropriate environment protections.
# Downstream: Infra repo and service infra folders call this to standardize IaC operations.
# Docs: https://github.com/hashicorp/setup-terraform

name: terraform

on:
  workflow_call:
    inputs:
      working_directory:
        description: "Directory containing Terraform configuration"
        required: true
        type: string
      environment:
        description: "GitHub environment name (dev/staging/prod)"
        required: true
        type: string
      aws_region:
        description: "AWS region"
        required: false
        type: string
        default: "us-east-1"
      role_to_assume:
        description: "AWS IAM role ARN to assume via OIDC"
        required: true
        type: string
      plan_only:
        description: "If true, skip apply"
        required: false
        type: boolean
        default: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write  # Required for OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ inputs.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: ${{ inputs.working_directory }}
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: ${{ inputs.working_directory }}
        run: terraform validate

      - name: Terraform Plan
        id: plan
        working-directory: ${{ inputs.working_directory }}
        run: terraform plan -input=false -out=tfplan

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ inputs.environment }}
          path: ${{ inputs.working_directory }}/tfplan

      - name: Terraform Apply
        if: ${{ !inputs.plan_only }}
        working-directory: ${{ inputs.working_directory }}
        run: terraform apply -input=false -auto-approve tfplan
        # TODO: Owner=DevOps: Remove -auto-approve and rely on environment approvals for prod.