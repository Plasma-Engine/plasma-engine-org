# Explainer: Reusable security scan workflow.
# Purpose: Dependency audits (pip-audit, npm audit), SAST (bandit), IaC (tfsec, tflint), and filesystem scan (trivy fs).
# Inputs: working-directory
# Links: docs/devops/playbooks/security.md

name: security-scan

on:
  workflow_call:
    inputs:
      working-directory:
        description: Project directory to scan
        required: false
        type: string
        default: '.'

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install security tools (Python)
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit bandit

      - name: Python dependency audit (pip-audit)
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f requirements.txt ]; then pip-audit -r requirements.txt || true; else echo 'No requirements.txt'; fi

      - name: Python SAST (bandit)
        working-directory: ${{ inputs.working-directory }}
        run: |
          if ls **/*.py >/dev/null 2>&1; then bandit -q -r . || true; else echo 'No Python code'; fi

      - name: Node dependency audit (npm audit)
        working-directory: ${{ inputs.working-directory }}
        run: |
          if [ -f package.json ]; then npm ci && npm audit --audit-level=high || true; else echo 'No package.json'; fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: TFLint
        uses: terraform-linters/setup-tflint@v4
      - run: tflint -f compact || true
        working-directory: ${{ inputs.working-directory }}

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          working_directory: ${{ inputs.working-directory }}

      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: ${{ inputs.working-directory }}
          format: 'table'
          exit-code: '0'

