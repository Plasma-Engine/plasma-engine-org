# Dockerfile for Sentiment Analysis Pipeline (PE-304)
# Multi-stage build for optimized production deployment

# Stage 1: Builder
FROM python:3.11-slim as builder

WORKDIR /build

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    python3-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt .

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Download spaCy model
RUN python -m spacy download en_core_web_sm

# Stage 2: Runtime
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -u 1000 sentiment && \
    mkdir -p /app/logs /app/data && \
    chown -R sentiment:sentiment /app

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/sentiment/.local
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages

# Set working directory
WORKDIR /app

# Copy application code
COPY --chown=sentiment:sentiment sentiment_analysis/ /app/sentiment_analysis/
COPY --chown=sentiment:sentiment tests/ /app/tests/

# Set environment variables
ENV PYTHONPATH=/app:$PYTHONPATH \
    PYTHONUNBUFFERED=1 \
    PATH=/home/sentiment/.local/bin:$PATH

# Switch to non-root user
USER sentiment

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command (can be overridden)
CMD ["python", "-m", "sentiment_analysis.api"]