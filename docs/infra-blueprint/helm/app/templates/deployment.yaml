apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "plasma-app.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "plasma-app.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "plasma-app.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "plasma-app.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        # Enable scraping by Prometheus if using annotations-based discovery
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.service.port | quote }}
    spec:
      containers:
        - name: app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            {{- if .Values.livenessProbe.enabled }}
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.livenessProbe.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
            {{- end }}
          readinessProbe:
            {{- if .Values.readinessProbe.enabled }}
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.readinessProbe.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            {{- end }}

