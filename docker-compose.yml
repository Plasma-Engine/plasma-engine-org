# Plasma Engine - Docker Compose Development Environment
# Complete infrastructure setup for local development
version: '3.8'

services:
  # ═══════════════════════════════════════════════════════════
  # PostgreSQL Database - Primary data store for all services
  # ═══════════════════════════════════════════════════════════
  postgres:
    image: postgres:15-alpine
    container_name: plasma-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-plasma_gateway}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - plasma-network

  # ═══════════════════════════════════════════════════════════
  # Redis Cache & Message Queue
  # ═══════════════════════════════════════════════════════════
  redis:
    image: redis:7-alpine
    container_name: plasma-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - plasma-network

  # ═══════════════════════════════════════════════════════════
  # Neo4j Graph Database - For Research Service Knowledge Graph
  # ═══════════════════════════════════════════════════════════
  neo4j:
    image: neo4j:5-community
    container_name: plasma-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # Browser
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: ${NEO4J_USER:-neo4j}/${NEO4J_PASSWORD:-neo4j}
      NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
      NEO4J_dbms_memory_pagecache_size: 512M
      NEO4J_dbms_memory_heap_max__size: 1G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 10s
      retries: 10
    networks:
      - plasma-network

  # ═══════════════════════════════════════════════════════════
  # pgAdmin - PostgreSQL Administration Tool
  # ═══════════════════════════════════════════════════════════
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: plasma-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@plasma.to}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - plasma-network
    depends_on:
      - postgres

  # ═══════════════════════════════════════════════════════════
  # Gateway Service - GraphQL Federation & API Gateway
  # ═══════════════════════════════════════════════════════════
  gateway:
    build:
      context: ./plasma-engine-gateway
      dockerfile: Dockerfile.dev
    container_name: plasma-gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-plasma_gateway}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-here}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      ALLOWED_DOMAIN: plasma.to
    volumes:
      - ./plasma-engine-gateway:/app
      - /app/node_modules
    networks:
      - plasma-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ═══════════════════════════════════════════════════════════
  # Research Service - GraphRAG & Knowledge Management
  # ═══════════════════════════════════════════════════════════
  research:
    build:
      context: ./plasma-engine-research
      dockerfile: Dockerfile.dev
    container_name: plasma-research
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/plasma_research
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: ${NEO4J_USER:-neo4j}
      NEO4J_PASSWORD: ${NEO4J_PASSWORD:-neo4j}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    volumes:
      - ./plasma-engine-research:/app
    networks:
      - plasma-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      neo4j:
        condition: service_healthy

  # ═══════════════════════════════════════════════════════════
  # Brand Service - Brand Monitoring & Analytics
  # ═══════════════════════════════════════════════════════════
  brand:
    build:
      context: ./plasma-engine-brand
      dockerfile: Dockerfile.dev
    container_name: plasma-brand
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/plasma_brand
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    volumes:
      - ./plasma-engine-brand:/app
    networks:
      - plasma-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ═══════════════════════════════════════════════════════════
  # Content Service - Content Generation & Publishing
  # ═══════════════════════════════════════════════════════════
  content:
    build:
      context: ./plasma-engine-content
      dockerfile: Dockerfile.dev
    container_name: plasma-content
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/plasma_content
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    volumes:
      - ./plasma-engine-content:/app
    networks:
      - plasma-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ═══════════════════════════════════════════════════════════
  # Agent Service - Multi-Agent Orchestration
  # ═══════════════════════════════════════════════════════════
  agent:
    build:
      context: ./plasma-engine-agent
      dockerfile: Dockerfile.dev
    container_name: plasma-agent
    restart: unless-stopped
    ports:
      - "8003:8003"
    environment:
      PYTHONUNBUFFERED: 1
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/plasma_agent
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    volumes:
      - ./plasma-engine-agent:/app
    networks:
      - plasma-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ═══════════════════════════════════════════════════════════
  # Frontend Application - Next.js UI
  # ═══════════════════════════════════════════════════════════
  frontend:
    build:
      context: ./plasma-engine-frontend
      dockerfile: Dockerfile.dev
    container_name: plasma-frontend
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3000/graphql
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      NEXTAUTH_URL: http://localhost:3001
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-nextauth-secret-here}
    volumes:
      - ./plasma-engine-frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - plasma-network
    depends_on:
      - gateway

# ═══════════════════════════════════════════════════════════
# Networks
# ═══════════════════════════════════════════════════════════
networks:
  plasma-network:
    driver: bridge

# ═══════════════════════════════════════════════════════════
# Volumes
# ═══════════════════════════════════════════════════════════
volumes:
  postgres_data:
  redis_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  pgadmin_data: